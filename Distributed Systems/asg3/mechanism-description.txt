# How it works

So how we went about this was once an instance of a node is created, a shard and view is initialized and persisted into memory. Once a client sends a request to a node, the node will check to see if it contains the key then process the request, otherwise, it will forward the request to the appropriate shard. A key belongs to a shard if its hashed value modulo the number of shards is that shards ID. In the case that the view-change endpoint is reached, the node first contacted will assume itself to be the main instance and alert all of the nodes by reaching their ‘update-view’ endpoint including its own. Resharding consists of rehashing each key with an updated number of views and forwarding to the correct node then deleting. The update-view endpoint is similar to view-change just no more broadcasting of the updated view.  